<?php

namespace App\Http\Controllers;

use App\Models\Task;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;

class TaskController extends Controller
{

public function toggle(Task $task)
{
    $user = Auth::user();

    $isOwner = $task->category->user_id === $user->id;
    $hasEditPermission = $task->category->sharedUsers()
        ->where('shared_user_id', $user->id)
        ->where('permission', 'edit')
        ->where('is_confirmed', true)
        ->exists();

    if (!$isOwner && !$hasEditPermission) {
        abort(403);
    }

    $task->is_done = !$task->is_done;
    $task->save();

    return back()->with('success', 'タスクの完了状態を変更しました');
}
    
public function destroy(Task $task)
{
    if ($task->category->user_id !== Auth::id()) {
        abort(403);
    }

    $task->delete();

    return back()->with('success', 'タスクを削除しました');
}

public function update(Request $request, Task $task)
{
    if ($task->category->user_id !== Auth::id()) {
        abort(403);
    }

    $request->validate([
        'title' => 'required|string|max:255',
        'due_date' => 'nullable|date',
        'note' => 'nullable|string',
    ]);

    $task->update([
        'title' => $request->title,
        'due_date' => $request->due_date,
        'note' => $request->note,
    ]);

    // ここで明示的に edit パラメータなしのURLにリダイレクト
    return redirect()
        ->route('categories.show', $task->category_id)
        ->with('success', 'タスクを更新しました');
}

}
