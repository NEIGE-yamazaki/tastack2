<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Str;
use App\Models\Category;
use App\Models\Task;
use App\Models\User;
use App\Models\CategoryUserShare;
use App\Notifications\CategoryShareInvitation;

class CategoryController extends Controller
{
    // カテゴリ一覧
    public function index()
    {
        $categories = Category::where('user_id', Auth::id())->get();
        return view('categories.index', compact('categories'));
    }

    // カテゴリ作成
    public function store(Request $request)
    {
        $request->validate([
            'name' => 'required|string|max:50',
        ]);

        Category::create([
            'user_id' => Auth::id(),
            'name' => $request->name,
        ]);

        return redirect()->back()->with('success', 'カテゴリを追加しました');
    }

    // カテゴリ詳細（タスク一覧）
    public function show(Category $category)
    {
        $user = Auth::user();

        // 自分がオーナーか共有ユーザーとして承認済みかを確認
        $hasAccess = $category->user_id === $user->id ||
            CategoryUserShare::where('category_id', $category->id)
                ->where('shared_user_id', $user->id)
                ->where('is_confirmed', true)
                ->exists();

        if (!$hasAccess) {
            abort(403);
        }

        $tasks = $category->tasks()->orderBy('created_at', 'desc')->get();
        $isOwner = $category->user_id === $user->id;

        return view('categories.show', compact('category', 'tasks', 'isOwner'));
    }

    // タスク追加
    public function addTask(Request $request, Category $category)
    {
        $user = Auth::user();

        $hasEditPermission = $category->sharedUsers()
            ->where('shared_user_id', $user->id)
            ->where('permission', 'edit')
            ->where('is_confirmed', true)
            ->exists();

        if ($category->user_id !== $user->id && !$hasEditPermission) {
            abort(403);
        }

        $request->validate([
            'title' => 'required|string|max:255',
            'due_date' => 'nullable|date',
            'note' => 'nullable|string',
        ]);

        $category->tasks()->create([
            'title' => $request->title,
            'due_date' => $request->due_date,
            'note' => $request->note,
        ]);

        return redirect()->route('categories.show', $category)->with('success', 'タスクを追加しました');
    }

    // カテゴリ共有処理
    public function share(Request $request, Category $category)
    {
        if ($category->user_id !== Auth::id()) {
            abort(403);
        }

        $request->validate([
            'email' => 'required|email|exists:users,email',
            'permission' => 'required|in:view,edit',
        ]);

        $sharedUser = User::where('email', $request->email)->first();

        // UUIDの生成と確認
        $token = (string) Str::uuid();
        if (empty($token)) {
            abort(500, 'トークン生成に失敗しました');
        }

        $existingShare = CategoryUserShare::where('category_id', $category->id)
            ->where('shared_user_id', $sharedUser->id)
            ->first();

        if ($existingShare) {
            $existingShare->update([
                'permission' => $request->permission,
                'confirmation_token' => $token,
                'is_confirmed' => false,
            ]);
        } else {
            CategoryUserShare::create([
                'category_id' => $category->id,
                'shared_user_id' => $sharedUser->id,
                'permission' => $request->permission,
                'confirmation_token' => $token,
                'is_confirmed' => false,
            ]);
        }

        $sharedUser->notify(new CategoryShareInvitation($category, $token));

        return redirect()->route('categories.show', $category)->with('success', '共有リンクを送信しました');
    }

    // 共有確認処理（通知リンククリック後）
    public function confirmShare($token)
    {
        $share = CategoryUserShare::where('confirmation_token', $token)->first();

        if (!$share) {
            abort(404);
        }

        if ($share->shared_user_id !== Auth::id()) {
            abort(403);
        }

        $share->update([
            'is_confirmed' => true,
            'confirmation_token' => null,
        ]);

        return redirect()->route('categories.show', $share->category_id)
            ->with('success', '共有されたカテゴリにアクセスできるようになりました');
    }
    
}
