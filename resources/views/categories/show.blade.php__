<x-app-layout>
    <x-slot name="header">
        <h2 style="font-size: 1.25rem; font-weight: 600;">
            {{ $category->name }} のタスク一覧
        </h2>
    </x-slot>

    <div style="padding: 1.5rem;">
        <div id="flash-message" style="display:none; margin-bottom: 1rem;"></div>

        @if(session('success'))
            <div style="color: green; margin-bottom: 1rem;">{{ session('success') }}</div>
        @endif
        @if(session('error'))
            <div style="color: red; margin-bottom: 1rem;">{{ session('error') }}</div>
        @endif

        @if ($isOwner)
        <form action="{{ route('categories.tasks.store', $category) }}" method="POST" style="margin-bottom: 1.5rem;">
            @csrf
            <div style="margin-bottom: 0.5rem;">
                <input type="text" name="title" placeholder="タスク名" required
                    style="width: 100%; padding: 0.5rem; border: 1px solid #ccc; border-radius: 4px;">
            </div>
            <div style="margin-bottom: 0.5rem;">
                <input type="date" name="due_date"
                    style="width: 100%; padding: 0.5rem; border: 1px solid #ccc; border-radius: 4px;">
            </div>
            <div style="margin-bottom: 0.5rem;">
                <textarea name="note" placeholder="メモ（任意）"
                    style="width: 100%; padding: 0.5rem; border: 1px solid #ccc; border-radius: 4px;"></textarea>
            </div>
            <button type="submit"
                style="background-color: #007bff; color: white; padding: 0.5rem 1rem; border: none; border-radius: 4px;">
                タスクを追加
            </button>
        </form>
        @endif

        <ul style="padding-left: 1rem;">
            @forelse($tasks as $task)
                <li style="margin-bottom: 1.5rem;" data-task-id="{{ $task->id }}">
                    <form action="{{ route('tasks.toggle', $task) }}" method="POST" class="task-toggle-form" style="display: inline;">
                        @csrf @method('PATCH')
                        <input type="checkbox" {{ $task->is_done ? 'checked' : '' }} class="task-toggle-checkbox" style="margin-right: 0.5rem;">
                    </form>
                    <span class="task-title {{ $task->is_done ? 'done' : '' }}">
                        <strong>{{ $task->title }}</strong>
                        @if ($task->due_date)
                            （期限: {{ $task->due_date }}）
                        @endif
                    </span>
                    @if ($isOwner)
                        <a href="#" class="edit-task-link"
                           data-id="{{ $task->id }}"
                           data-title="{{ $task->title }}"
                           data-due_date="{{ $task->due_date }}"
                           data-note="{{ $task->note }}"
                           style="font-size: 0.8rem; color: #007bff; text-decoration: underline; margin-left: 0.5rem;">
                            編集
                        </a>
                        <form action="{{ route('tasks.destroy', $task) }}" method="POST" class="task-delete-form" style="display: inline; margin-left: 0.5rem;">
                            @csrf @method('DELETE')
                            <button type="submit"
                                style="background-color: #dc3545; color: #fff; padding: 0.25rem 0.5rem; border: none; border-radius: 4px;">
                                削除
                            </button>
                        </form>
                    @endif
                    @if ($task->note)
                        <div style="font-size: 0.875rem; color: #555; margin-top: 0.25rem;">{{ $task->note }}</div>
                    @endif
                </li>
            @empty
                <li>タスクはまだありません。</li>
            @endforelse
        </ul>

        @if ($isOwner && $category->sharedUsers->count())
        <div style="margin-top: 2rem;">
            <strong>共有中のユーザー：</strong>
            <ul>
                @foreach($category->sharedUsers as $user)
                    <li style="margin-bottom: 0.5rem;">
                        <form action="{{ route('categories.share.update', [$category->id, $user->id]) }}" method="POST" class="share-edit-form" style="display: inline-flex; align-items: center; gap: 0.5rem;">
                            @csrf @method('PATCH')
                            {{ $user->name }}（{{ $user->email }}）
                            <select name="permission">
                                <option value="view" {{ $user->pivot->permission === 'view' ? 'selected' : '' }}>閲覧のみ</option>
                                <option value="edit" {{ $user->pivot->permission === 'edit' ? 'selected' : '' }}>編集可能</option>
                            </select>
                            <button type="submit"
                                style="padding: 0.2rem 0.6rem; background-color: #007bff; color: #fff; border: none; border-radius: 4px;">
                                更新
                            </button>
                        </form>
                        <form action="{{ route('categories.share.delete', [$category->id, $user->id]) }}" method="POST" class="share-delete-form" style="display: inline;">
                            @csrf @method('DELETE')
                            <button type="submit"
                                style="padding: 0.2rem 0.6rem; background-color: #dc3545; color: #fff; border: none; border-radius: 4px;">
                                削除
                            </button>
                        </form>
                        @if(!$user->pivot->is_confirmed)
                            <span style="color: #999;">（未承認）</span>
                        @endif
                    </li>
                @endforeach
            </ul>
        </div>
        @endif

        @if ($isOwner)
        <div style="margin-top: 2rem; border-top: 1px solid #ccc; padding-top: 1.5rem;">
            <h3 style="margin-bottom: 1rem;">このカテゴリの共有</h3>
            <form action="{{ route('categories.share', $category) }}" method="POST">
                @csrf
                <div id="share-user-list">
                    <div class="share-user-row" style="margin-bottom: 1rem;">
                        <input type="email" name="emails[]" placeholder="共有先メールアドレス" required>
                        <select name="permissions[]">
                            <option value="view">閲覧のみ</option>
                            <option value="edit">編集可能</option>
                        </select>
                    </div>
                </div>
                <button type="button" onclick="addShareUserRow()">＋ 共有先を追加</button>
                <button type="submit"
                    style="background-color: #28a745; color: white; padding: 0.5rem 1rem; border: none; border-radius: 4px;">
                    共有リンクを送信
                </button>
            </form>
        </div>
        @endif
    </div>

    <style>
        .done {
            text-decoration: line-through;
            color: gray;
        }
    </style>

    <script>
    document.addEventListener('DOMContentLoaded', () => {
        function showFlashMessage(message, type = 'success') {
            const flash = document.getElementById('flash-message');
            flash.textContent = message;
            flash.style.display = 'block';
            flash.style.color = (type === 'success') ? 'green' : 'red';
            setTimeout(() => { flash.style.display = 'none'; }, 3000);
        }

        function addShareUserRow() {
            const list = document.getElementById('share-user-list');
            const original = document.querySelector('.share-user-row');
            const clone = original.cloneNode(true);
            clone.querySelector('input').value = '';
            clone.querySelector('select').value = 'view';
            if (!clone.querySelector('.remove-button')) {
                const btn = document.createElement('button');
                btn.textContent = '削除';
                btn.type = 'button';
                btn.className = 'remove-button';
                btn.style = 'margin-left: 0.5rem; background-color: #dc3545; color: #fff; border: none; border-radius: 4px; padding: 0.2rem 0.5rem;';
                btn.onclick = () => list.removeChild(clone);
                clone.appendChild(btn);
            }
            list.appendChild(clone);
        }

        // タスク完了トグル（非同期）
        document.querySelectorAll('.task-toggle-form').forEach(form => {
            form.addEventListener('change', function (e) {
                e.preventDefault();
                const checkbox = form.querySelector('.task-toggle-checkbox');
                const formData = new FormData(form);
                fetch(form.action, {
                    method: 'POST',
                    headers: {
                        'X-CSRF-TOKEN': '{{ csrf_token() }}',
                        'Accept': 'application/json',
                    },
                    body: formData,
                })
                .then(response => response.json())
                .then(data => {
                    showFlashMessage(data.message || '更新しました');
                    const span = form.nextElementSibling;
                    if (span && span.classList) {
                        span.classList.toggle('done', data.is_done);
                    }
                })
                .catch(() => showFlashMessage('更新に失敗しました', 'error'));
            });
        });

        // 編集リンク → 編集フォームに差し替え
        document.querySelectorAll('.edit-task-link').forEach(link => {
            link.addEventListener('click', function (e) {
                e.preventDefault();
                const li = link.closest('li');
                const id = link.dataset.id;
                const title = link.dataset.title;
                const due = link.dataset.due_date || '';
                const note = link.dataset.note || '';

                li.innerHTML = `
                    <form class="task-edit-form" method="POST" action="/tasks/${id}">
                        <input type="hidden" name="_token" value="{{ csrf_token() }}">
                        <input type="hidden" name="_method" value="PATCH">
                        <input type="text" name="title" value="${title}" required style="width:100%;margin-bottom:0.5rem;padding:0.5rem;border:1px solid #ccc;border-radius:4px;">
                        <input type="date" name="due_date" value="${due}" style="width:100%;margin-bottom:0.5rem;padding:0.5rem;border:1px solid #ccc;border-radius:4px;">
                        <textarea name="note" style="width:100%;margin-bottom:0.5rem;padding:0.5rem;border:1px solid #ccc;border-radius:4px;">${note}</textarea>
                        <button type="submit" style="background-color:#28a745;color:#fff;padding:0.4rem 0.8rem;border:none;border-radius:4px;margin-right:0.5rem;">保存</button>
                        <button type="button" class="cancel-edit" style="color:#999;background:none;border:none;text-decoration:underline;">キャンセル</button>
                    </form>
                `;

                li.querySelector('.cancel-edit').addEventListener('click', () => location.reload());

                li.querySelector('.task-edit-form').addEventListener('submit', function (e) {
                    e.preventDefault();
                    const data = Object.fromEntries(new FormData(this).entries());
                    fetch(this.action, {
                        method: 'POST',
                        headers: {
                            'X-CSRF-TOKEN': '{{ csrf_token() }}',
                            'Accept': 'application/json',
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(data)
                    }).then(() => {
                        showFlashMessage('保存しました');
                        location.reload();
                    }).catch(() => showFlashMessage('保存に失敗しました', 'error'));
                });
            });
        });

        // 共有の更新・削除（既存）
        document.querySelectorAll('.share-edit-form, .share-delete-form').forEach(form => {
            form.addEventListener('submit', function (e) {
                e.preventDefault();
                const method = form.classList.contains('share-delete-form') ? 'DELETE' : 'PATCH';
                const data = method === 'PATCH'
                    ? JSON.stringify(Object.fromEntries(new FormData(form).entries()))
                    : null;

                if (method === 'DELETE' && !confirm('この共有を解除しますか？')) return;

                fetch(form.action, {
                    method,
                    headers: {
                        'X-CSRF-TOKEN': '{{ csrf_token() }}',
                        'Accept': 'application/json',
                        ...(method === 'PATCH' ? { 'Content-Type': 'application/json' } : {})
                    },
                    body: data
                }).then(() => {
                    if (method === 'DELETE') form.closest('li').remove();
                    showFlashMessage(method === 'PATCH' ? '権限を更新しました' : '共有を解除しました');
                }).catch(() => showFlashMessage('処理に失敗しました', 'error'));
            });
        });
    });
    </script>
</x-app-layout>
