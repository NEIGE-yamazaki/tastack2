@if ($isOwner)
<div style="margin-top: 2rem; border-top: 1px solid #ccc; padding-top: 1.5rem;">
    <h3 style="margin-bottom: 1rem;">このカテゴリの共有</h3>

    <form action="{{ route('categories.share', $category) }}" method="POST">
        @csrf

        <!-- ▼ グループ選択 -->
        @if (!empty($groups) && $groups->count())
            <div style="margin-bottom: 1rem;">
                <label>共有グループから選択：</label>
                <select id="group-selector">
                    <option value="">-- グループを選択 --</option>
                    @foreach ($groups as $group)
                        <option value="{{ $group->id }}" data-members='@json($group->members->pluck("identifier"))'>
                            {{ $group->name }}
                        </option>
                    @endforeach
                </select>
                <button type="button" onclick="insertGroupMembers()">← 追加</button>
            </div>
        @endif

        <!-- ▼ 個別指定リスト -->
        <div id="share-user-list">
            <div class="share-user-row" style="margin-bottom: 1rem;">
                <input type="text" name="identifiers[]" placeholder="アカウントID または メールアドレス" required>
                <select name="permissions[]">
                    <option value="view">閲覧のみ</option>
                    <option value="edit">編集可能</option>
                </select>
            </div>
        </div>

        <button type="button" onclick="addShareUserRow()" style="margin-bottom: 1rem;">＋ 共有先を追加</button>

        <button type="submit"
            style="background-color: #28a745; color: white; padding: 0.5rem 1rem; border: none; border-radius: 4px;">
            共有リンクを送信
        </button>
    </form>

    <script>
        function addShareUserRow() {
            const list = document.getElementById('share-user-list');
            const original = document.querySelector('.share-user-row');
            const clone = original.cloneNode(true);
            clone.querySelector('input').value = '';
            clone.querySelector('select').value = 'view';

            if (!clone.querySelector('.remove-button')) {
                const btn = document.createElement('button');
                btn.textContent = '削除';
                btn.type = 'button';
                btn.className = 'remove-button';
                btn.style = 'margin-left: 0.5rem; background-color: #dc3545; color: #fff; border: none; border-radius: 4px; padding: 0.2rem 0.5rem;';
                btn.onclick = function () {
                    list.removeChild(clone);
                };
                clone.appendChild(btn);
            }

            list.appendChild(clone);
        }

        function insertGroupMembers() {
            const select = document.getElementById('group-selector');
            const selected = select.options[select.selectedIndex];
            const members = JSON.parse(selected.dataset.members || '[]');

            if (!members.length) {
                alert('メンバーが見つかりません');
                return;
            }

            const list = document.getElementById('share-user-list');
            members.forEach(identifier => {
                const row = document.querySelector('.share-user-row').cloneNode(true);
                row.querySelector('input').value = identifier;
                row.querySelector('select').value = 'view';

                if (!row.querySelector('.remove-button')) {
                    const btn = document.createElement('button');
                    btn.textContent = '削除';
                    btn.type = 'button';
                    btn.className = 'remove-button';
                    btn.style = 'margin-left: 0.5rem; background-color: #dc3545; color: #fff; border: none; border-radius: 4px; padding: 0.2rem 0.5rem;';
                    btn.onclick = function () {
                        list.removeChild(row);
                    };
                    row.appendChild(btn);
                }

                list.appendChild(row);
            });
        }
    </script>
</div>
@endif
